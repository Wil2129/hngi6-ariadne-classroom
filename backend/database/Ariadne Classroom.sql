-- MySQL Script generated by MySQL Workbench
-- Sun Sep 29 18:24:02 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema ariadne_classroom
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `ariadne_classroom` ;

-- -----------------------------------------------------
-- Schema ariadne_classroom
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ariadne_classroom` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `ariadne_classroom` ;

-- -----------------------------------------------------
-- Table `ariadne_classroom`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ariadne_classroom`.`users` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ariadne_classroom`.`users` (
  `uid` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(32) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  `phone` VARCHAR(20) NULL,
  `type` ENUM('teacher', 'student') NULL,
  PRIMARY KEY (`uid`));

SHOW WARNINGS;
CREATE UNIQUE INDEX `email_UNIQUE` ON `ariadne_classroom`.`users` (`email` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `phone_UNIQUE` ON `ariadne_classroom`.`users` (`phone` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ariadne_classroom`.`teachers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ariadne_classroom`.`teachers` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ariadne_classroom`.`teachers` (
  `teacher_id` INT NOT NULL,
  PRIMARY KEY (`teacher_id`),
  CONSTRAINT `fk_teachers_users1`
    FOREIGN KEY (`teacher_id`)
    REFERENCES `ariadne_classroom`.`users` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ariadne_classroom`.`students`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ariadne_classroom`.`students` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ariadne_classroom`.`students` (
  `student_id` INT NOT NULL,
  PRIMARY KEY (`student_id`),
  CONSTRAINT `fk_students_users`
    FOREIGN KEY (`student_id`)
    REFERENCES `ariadne_classroom`.`users` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ariadne_classroom`.`classrooms`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ariadne_classroom`.`classrooms` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ariadne_classroom`.`classrooms` (
  `classroom_id` INT NOT NULL AUTO_INCREMENT,
  `teacher_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `category` ENUM('web development', 'mobile app development', 'design', 'macine leaning', 'digital marketing') NULL,
  `level` ENUM('beginner', 'intermediate', 'advanced') NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`classroom_id`, `teacher_id`),
  CONSTRAINT `fk_classrooms_teachers1`
    FOREIGN KEY (`teacher_id`)
    REFERENCES `ariadne_classroom`.`teachers` (`teacher_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ariadne_classroom`.`items`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ariadne_classroom`.`items` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ariadne_classroom`.`items` (
  `item_id` INT NOT NULL AUTO_INCREMENT,
  `classroom_id` INT NOT NULL,
  `teacher_id` INT NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `content` TEXT NULL,
  `files_url` VARCHAR(255) NULL,
  PRIMARY KEY (`item_id`, `classroom_id`, `teacher_id`),
  CONSTRAINT `fk_items_classrooms1`
    FOREIGN KEY (`classroom_id` , `teacher_id`)
    REFERENCES `ariadne_classroom`.`classrooms` (`classroom_id` , `teacher_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_items_classrooms1_idx` ON `ariadne_classroom`.`items` (`classroom_id` ASC, `teacher_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ariadne_classroom`.`classrooms_have_students`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ariadne_classroom`.`classrooms_have_students` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ariadne_classroom`.`classrooms_have_students` (
  `classroom_id` INT NOT NULL,
  `teacher_id` INT NOT NULL,
  `student_id` INT NOT NULL,
  PRIMARY KEY (`classroom_id`, `teacher_id`, `student_id`),
  CONSTRAINT `fk_classrooms_has_students_classrooms1`
    FOREIGN KEY (`classroom_id` , `teacher_id`)
    REFERENCES `ariadne_classroom`.`classrooms` (`classroom_id` , `teacher_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_classrooms_has_students_students1`
    FOREIGN KEY (`student_id`)
    REFERENCES `ariadne_classroom`.`students` (`student_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_classrooms_has_students_students1_idx` ON `ariadne_classroom`.`classrooms_have_students` (`student_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_classrooms_has_students_classrooms1_idx` ON `ariadne_classroom`.`classrooms_have_students` (`classroom_id` ASC, `teacher_id` ASC) VISIBLE;

SHOW WARNINGS;
USE `ariadne_classroom`;

DELIMITER $$

USE `ariadne_classroom`$$
DROP TRIGGER IF EXISTS `ariadne_classroom`.`users_AFTER_INSERT` $$
SHOW WARNINGS$$
USE `ariadne_classroom`$$
CREATE DEFINER = CURRENT_USER TRIGGER `ariadne_classroom`.`users_AFTER_INSERT` AFTER INSERT ON `users` FOR EACH ROW
BEGIN
	IF NEW.`type` = 'teacher' THEN
		INSERT INTO `teachers` SET `teacher_id` = NEW.`uid`;
	ELSEIF NEW.`type` = 'student' THEN
		INSERT INTO `students` SET `student_id` = NEW.`uid`;
	END IF;
END$$

SHOW WARNINGS$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
